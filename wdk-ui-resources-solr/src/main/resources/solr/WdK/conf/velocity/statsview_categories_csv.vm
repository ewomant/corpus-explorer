#set($searcher = $request.searcher)##
#set($params = $request.params)##
#set($clusters = $response.response.clusters) #set($mltResults = $response.response.get("moreLikeThis")) #set($annotate = $params.get("annotateBrowse")) #parse('config.vm') #set($success = $additional_params.addAll($additional_params_stats)) #parse('topics.vm') #parse('calc_params.vm')##
#set($String = "abc") #set($facet_pivot_1= $params.get('facet_pivot_1')) #set($facet_pivot_2= $params.get('facet_pivot_2')) #set($rel_values = false) #if( $params.get('rel_values').equals("on")) #set($rel_values = true) #end #if($params.get('top_entries_max')) #set($top_entries_max = $number.toNumber($params.get('top_entries_max'))) #else #set($top_entries_max = 3) #end #set($range_pivot = false) #if($facet_pivot_1.equals($timefacet_grouped)) #set($range_pivot = true) #set($facet_pivot_1 = $timefacet) #end #set($params_without = ['sort', 'ct', 'rows', 'hl.q', 'v.template']) #set($success = $params_without.addAll($additional_params_stats) ) #set($lens = "#lens_without_P_tagged($params_without)") #*TODO: Link auf filter + ggf. ct & sort*# #set($base_url = "#{url_for_solr}/browse$lens") #*set($base_url = "$base_url&hl.q=$esc.url($params.get('q'))")*# #if($facet_pivot_1 && $facet_pivot_2) #set($compare_query = true) #end #set($pivots = $response.response.facet_counts.facet_pivot) #*if statson, statsonquery statsonquery*# #set($orderedfacetkeys = [])#*columnkeys*# #set($orderedfacetcounts = {})#*rowtotals*# #set($entries = {}) #*columntotals*# #set($allsubentries = {}) #set($orderedsubfacetkeys = [])#*rowkeys*# #set($orderedsubfacetcounts = {})#*rowtotals*# #set($orderedsubfacetstats1 = {}) #*parse the other way around... $facet_pivot_1 comes first, while*# #if($range_pivot) #foreach ($pivot in $pivots) #foreach ($entry in  $pivot.value) #if($entry.value) #set($entry_value = $entry.value) #else #set($entry_value = $missing_value) #end #set($facet_pivot_2 = $entry.field) #set($added = $orderedsubfacetkeys.add($entry_value)) #set($orderedsubfacetcounts[$entry_value] =$entry.count) #if($entry.ranges) #set($counts = $entry.ranges[$facet_pivot_1 ].counts) #foreach($count in $counts) #*set($added = $orderedfacetkeys.add($count.value))*# #set($startyear = $math.toInteger($count.toString().substring(0,4))) #set($endyear = "#range_get_to_value_year($startyear, $entry.ranges[$facet_pivot_1 ].gap)") #* "[" + $startyear + " TO " + $endyear + "]")*# #set($rangekey  = "[" + $startyear + " TO " + $endyear + "]") #if($count.value > 0) #if( ! $orderedfacetcounts[$rangekey]) #set($added = $orderedfacetkeys.add($rangekey)) #set($orderedfacetcounts[$rangekey] = $response.response.facet_counts.facet_ranges[$facet_pivot_1].counts[$startyear.toString()]) #set($allsubentries[$rangekey] = {}) #end #set($newentry = {'field':$facet_pivot_2 , 'value': $rangekey, 'count': $count.value, "range": true }) #*set($entries[$rangekey] = )*# #set($allsubentries[$rangekey][$entry_value] = $newentry) #end #end #end #end #end #else #*parse ##kein range pivot##alternative: facetten f√ºr iterieren verwenden und damit pivot-entries abfragen? Would avoid 0 errors*# #foreach ($pivot in $pivots) #foreach ($entry in $pivot.value) #set($entry_value = "") #set($entry_value =   $entry.value.toString()) #if(!$entry_value  || $entry_value == "") #set($entry_value = $missing_value) #end #if( $response.response.facet_counts.facet_fields[$entry.field][$entry_value]) #set($added = $orderedfacetkeys.add($entry_value)) #set($orderedfacetcounts[$entry_value] = $entry.count)#set($entries[$entry_value] = $entry) #*entry als facet vorhanden?*# #set($subentries = {})''
#foreach($subentry in $entry.pivot)
#set($subentry_value = "")
#set($subentry_value =   $subentry.value.toString())
#if(!$subentry_value  || $subentry_value == "")
#set($subentry_value = $missing_value)
#end
##Subentry value '$subentry_value' <br/>

##only save entries for which a facet value exists
#if($response.response.facet_counts.facet_fields[$subentry.field][$subentry_value]) ##Ja:
#if( $!orderedsubfacetcounts[$subentry_value])
#else
#set($added = $orderedsubfacetkeys.add($subentry_value))
#set($orderedsubfacetcounts[$subentry_value] =  $response.response.facet_counts.facet_fields[$subentry.field][$subentry_value])
#end
#set($subentries[$subentry_value] = $subentry )
#else
## <br/>Subentry $subentry_value nicht als facette vorhanden <br/>
#end

#end

#set($allsubentries[$entry_value] = $subentries)

#else
## <br/> Entry $entry_value in $entry.field nicht als Facette vorhanden
##  $response.response.facet_counts.facet_fields[$entry.field]<br/>
#end

#end
#end
#end
##for dates order by facetkey
#if($facet_pivot_1  == $timefacet || $facet_pivot_1 == $timefacet_grouped)
    #set($orderedfacetkeys =  $sort.sort( $orderedfacetkeys))
#elseif($facet_pivot_2 == $timefacet)
    #set($orderedsubfacetkeys =  $sort.sort( $orderedsubfacetkeys))
#end
#set($sp = ",")

${sp} ${sp}#foreach($facet_value in $orderedfacetkeys)$facet_value#if($velocityHasNext)$sp#end#end

#foreach($subfacetkey in $orderedsubfacetkeys )
    $esc.newline${foreach.count}${sp}#displayfacetname($subfacetkey)$sp#foreach($key in $orderedfacetkeys)#set($subentry = $allsubentries[$key][$subfacetkey])#if(!$rel_values)$subentry.count#else#formatp($subentry.relative_count)#end#if($velocityHasNext)$sp#end#end#end



